package Exception_handling;

public class Exception_Handling_Methods {

	public static void main(String args[]) 
	{
		method1();
		arithmetic_exce1();
		arithmetic_exce2();
		array_ind_outof_bound_exce();
		method2();
	}

	//if you don't handle the exception, the statements fall after your exception will not get executed.
	//Throwable is a super class which absorbs all the Errors and Exception.
	//To narrow down handling, you can use the subclass Exceptions
	//To further narrow down to handle the exceptions, you can use the subclass of Exception. for example: ArithmeticException
	//If ArithmeticException catches the exception, it will not go to Exception or further Throwable.
	//In case it's 
	

	public static void method1()
	{
		try {
				System.out.println("Executing Method1...");
			}catch(Throwable e) {};
	
	}

	public static void arithmetic_exce1() 
	{
		try {
				int i = 100 / 0;
				System.out.println(i);
			}catch(Exception e) 
			{
				//System.out.println(e.getMessage());
				e.printStackTrace();
			}
	}
	
	public static void arithmetic_exce2() 
	{
		try {
				int i = 100 / 0;
				System.out.println(i);
			}catch(ArithmeticException e) 
			{
				e.printStackTrace();
				
			}catch(Exception e)
			{
				e.printStackTrace();
			}catch(Throwable e)
			{
				e.printStackTrace();
			}
	}
	
	public static void array_ind_outof_bound_exce() 
	{
		try {
			
			int[] arrInt = {1,2,3};
			System.out.println(arrInt[5]);
			
		}catch(Exception e) 
		{
			e.printStackTrace();
		}

	}

	public static void method2()
	{
		try {
				System.out.println("Executing Method2...");
			}catch(Exception e) {}
	}
}